server.port= 8081
server.servlet.context-path=/

#数据源
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.url=jdbc:mysql://212.64.58.188:3306/yang2?useSSL=false
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#实现项目启动去向MySQL数据库生成表和数据（初始化数据库）
#1.找到所需要执行的sql文件（classpath:sql/sql_all.sql)
#在springboot官网中说明schema,只是初始化表和表结构用的，并不建议初始化表数据
#   schema不但可以初始化表结构，也可以初始化表数据（官方不推荐这样用）
spring.datasource.schema=classpath:sql/qy_all.sql
#初始化数据
#spring.datasource.data=

#前提
#   项目第一次启动才会去初始化数据库--->项目启动后就有用户开始注册，下单--->数据库会开始发生变化
#   如果项目每次启动都去初始化数据库就保证了数据库每次都是新的--->就会覆盖用户的操作（导致数据丢失）
#配置项目启动是否初始化数据库
#有三个值
#   always:表示每一次启动都会去加载预先设置好的SQL文件，去初始化数据库
#   never:项目启动不再去初始化数据库
#   embedded:初始化内存数据库（redis，mongoDB)
spring.datasource.initialization-mode=never

mybatis.type-aliases-package=com.aaa.lee.repast.model
mybatis.mapper-locations=classpath:mapper/*Mapper.xml
#遵循java驼峰命名规则（产生自动映射@Column()），自动映射（myslq：user_name---> java：userName
mybatis.configuration.map-underscore-to-camel-case=true

spring.application.name=memberinfo-interface

#配置Eureka的注册中心
eureka.client.service-url.defaultZone=http://eureka1:7081/eureka,http://eureka2:7082/eureka,http://eureka3:7083/eureka
#eureka实例id
eureka.instance.instance-id=interface-provider-8081

info.app.name=interface-provider-8081
info.app.port=8081
info.app.author=Yang
info.cpmpay.name=AAA Software Education

#配置通用mapper
#配置自增主键规则（通用mapper不是只适用于mysql，还适用oracle
#如果使用的是mysql可以不配（默认使用的及时mysql）
mapper.identity=MYSQL
#通用mapper配置（让mapper在所有的地方都适用：通用mapper高可用）
mapper.mappers=tk.mybatis.mapper.common.Mapper
#设置insert update语句自动添加if判断
mapper.not-empty=true

#因为java中是有枚举类型的（sql语句中有些是固定的--->删除状态（1：已删除，2：为删除）
#因为通用mapper并不识别枚举类型--->所以需要把枚举类型转换成简单类型
mapper.enum-as-simple-type=true

#pegehelper通用插件
pagehelper.helper-dialect=mysql
#查询条数
pagehelper.params=count=countSql
#禁用掉
pagehelper.reasonable=false
#是否支持方法添加参数
pagehelper.support-methods-arguments=true




